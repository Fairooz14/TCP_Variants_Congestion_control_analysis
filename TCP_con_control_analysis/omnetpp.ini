[General]
network = TcpVariantsSim.TcpVariants
sim-time-limit = 20s
# Enable detailed result recording
record-eventlog = false
**.vector-recording = true
**.scalar-recording = true
output-vector-precision = 6

# Interface and link properties for Ethernet
*.eth[].typename = "EthernetInterface"
*.eth[].dataRate = 100Mbps            # Standard Ethernet speed
*.eth[].queue.typename = "DropTailQueue"
*.eth[].queue.frameCapacity = 500     # Queue size to induce congestion

# TCP Sender App
**.sender.numApps = 1
**.sender.app[0].typename = "TcpSessionApp"
**.sender.app[0].localPort = 1000
**.sender.app[0].connectAddress = "receiver"
**.sender.app[0].connectPort = 1000
**.sender.app[0].tOpen = 0s
**.sender.app[0].tSend = 0s
**.sender.app[0].sendBytes = 100MiB   # High data load
**.sender.app[0].tClose = -1s

# TCP Receiver App
**.receiver.numApps = 1
**.receiver.app[0].typename = "TcpSinkApp"
**.receiver.app[0].localPort = 1000

# Background Traffic Generator
**.trafficGen.numApps = 1
**.trafficGen.app[0].typename = "TcpSessionApp"
**.trafficGen.app[0].localPort = 2000
**.trafficGen.app[0].connectAddress = "receiver"
**.trafficGen.app[0].connectPort = 2000
**.trafficGen.app[0].tOpen = 0s
**.trafficGen.app[0].tSend = 0s
**.trafficGen.app[0].sendBytes = 50MiB  # Moderate background traffic
**.trafficGen.app[0].tClose = -1s

# TCP stack settings
**.sender.hasTcp = true
**.sender.tcp.typename = "Tcp"
**.receiver.hasTcp = true
**.receiver.tcp.typename = "Tcp"
**.tcp.recordStatistics = true
**.tcp.mss = 1460

# Statistics collection for network-level statistics
**.throughput:vector.record = vector
**.throughput:scalar.record = avg
**.endToEndDelay:vector.record = vector
**.endToEndDelay:scalar.record = avg
**.packetLoss:vector.record = vector
**.packetLoss:scalar.record = sum
**.cwnd:vector.record = vector
**.cwnd:scalar.record = avg
**.rtt:vector.record = vector
**.rtt:scalar.record = avg

# INET TCP module statistics
**.sender.tcp.sentData:vector.record = vector  # Bytes sent
**.sender.tcp.rcvdData:vector.record = vector  # Bytes received
**.sender.tcp.cwnd:vector.record = vector      # Congestion window
**.sender.tcp.rtt:vector.record = vector       # Round-trip time
**.sender.tcp.packetLoss:vector.record = vector # Packet loss events
**.sender.tcp.sentData:scalar.record = sum
**.sender.tcp.rcvdData:scalar.record = sum
**.sender.tcp.cwnd:scalar.record = avg
**.sender.tcp.rtt:scalar.record = avg
**.sender.tcp.packetLoss:scalar.record = sum

**.receiver.tcp.sentData:vector.record = vector
**.receiver.tcp.rcvdData:vector.record = vector
**.receiver.tcp.packetLoss:vector.record = vector
**.receiver.tcp.sentData:scalar.record = sum
**.receiver.tcp.rcvdData:scalar.record = sum
**.receiver.tcp.packetLoss:scalar.record = sum

# TCP Variant Configurations
[Config Reno]
description = "TCP Reno test"
result-dir = "results/Reno"
**.sender.tcp.tcpAlgorithmClass = "TcpReno"

[Config NewReno]
description = "TCP NewReno test"
result-dir = "results/NewReno"
**.sender.tcp.tcpAlgorithmClass = "TcpNewReno"

[Config Vegas]
description = "TCP Vegas test"
result-dir = "results/Vegas"
**.sender.tcp.tcpAlgorithmClass = "TcpVegas"